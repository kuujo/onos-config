/*
Copyright 2019-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package onos.config.device.rollback;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "github.com/onosproject/onos-config/pkg/types/meta/types.proto";

// Rollback configures a rollback of a Change to a single device
// The Rollback configuration must reference the 'id' of the Change to roll back via the 'change_id'
message Rollback {
    // 'id' is the unique identifier of the rollback
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];

    // 'revision' is the rollback revision number
    // Each time the rollback state is updated, a new revision number will be assigned. The revision
    // is guaranteed to be unique and monotonically increasing and is thus suitable for optimistic
    // concurrency control.
    uint64 revision = 2 [(gogoproto.casttype) = "Revision"];

    // 'rollback_id' is a foreign key to the 'id' field of the parent NetworkRollback
    string rollback_id = 3 [(gogoproto.customname) = "RollbackID", (gogoproto.casttype) = "github.com/onosproject/onos-config/pkg/types.ID"];

    // 'change_id' is a foreign key to the 'id' field of the device Change to rollback
    string change_id = 4 [(gogoproto.customname) = "ChangeID", (gogoproto.casttype) = "github.com/onosproject/onos-config/pkg/types.ID"];

    // 'status' is the current status of the rollback
    // The rollback will be initialized with the 'PENDING' status and will progress through the 'APPLYING'
    // status and ultimately marked 'SUCCEEDED' or 'FAILED' once the rollback is complete. If the rollback
    // fails, a 'reason' and optional 'message' will be provided.
    onos.config.meta.Status status = 5;

    // 'reason' is the reason the rollback failed
    // The 'reason' field will be set to 'ERROR' by default and is invalid unless the 'status' is 'FAILED'.
    onos.config.meta.FailureReason reason = 6;

    // 'message' is an optional status message
    // The message will be empty unless the rollback is failed with a 'FAILED' status, in which case the
    // 'message' field may be used to provide a failure message.
    string message = 7;

    // 'created' is the time at which the rollback was created
    google.protobuf.Timestamp created = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

    // 'updated' is the time at which the rollback was last updated
    google.protobuf.Timestamp updated = 9 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}
