// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/types/device/rollback/types.proto

package rollback

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	github_com_onosproject_onos_config_pkg_types "github.com/onosproject/onos-config/pkg/types"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Status is the status of a configuration object
type Status int32

const (
	// PENDING indicates the configuration is waiting to be applied
	Status_PENDING Status = 0
	// APPLYING indicates the configuration is in the process of being applied
	Status_APPLYING Status = 1
	// SUCCEEDED indicates the configuration was applied successfully
	Status_SUCCEEDED Status = 2
	// FAILED indicates the configuration failed
	Status_FAILED Status = 3
)

var Status_name = map[int32]string{
	0: "PENDING",
	1: "APPLYING",
	2: "SUCCEEDED",
	3: "FAILED",
}

var Status_value = map[string]int32{
	"PENDING":   0,
	"APPLYING":  1,
	"SUCCEEDED": 2,
	"FAILED":    3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_444317a9fa619639, []int{0}
}

// Reason is a failure reason
type Reason int32

const (
	// ERROR indicates an error occurred
	Reason_ERROR Reason = 0
	// UNAVAILABLE indicates the device was unavailable
	Reason_UNAVAILABLE Reason = 1
)

var Reason_name = map[int32]string{
	0: "ERROR",
	1: "UNAVAILABLE",
}

var Reason_value = map[string]int32{
	"ERROR":       0,
	"UNAVAILABLE": 1,
}

func (x Reason) String() string {
	return proto.EnumName(Reason_name, int32(x))
}

func (Reason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_444317a9fa619639, []int{1}
}

// Rollback represents a rollback of a change to a single device
type Rollback struct {
	// The identifier of the change
	ID ID `protobuf:"bytes,1,opt,name=id,proto3,casttype=ID" json:"id,omitempty"`
	// The configuration revision number
	Revision Revision `protobuf:"varint,2,opt,name=revision,proto3,casttype=Revision" json:"revision,omitempty"`
	// The ID of the parent NetworkRollback
	RollbackID github_com_onosproject_onos_config_pkg_types.ID `protobuf:"bytes,3,opt,name=rollback_id,json=rollbackId,proto3,casttype=github.com/onosproject/onos-config/pkg/types.ID" json:"rollback_id,omitempty"`
	// The ID if the change to rollback
	ChangeID github_com_onosproject_onos_config_pkg_types.ID `protobuf:"bytes,4,opt,name=change_id,json=changeId,proto3,casttype=github.com/onosproject/onos-config/pkg/types.ID" json:"change_id,omitempty"`
	// The current status of the configuration
	Status Status `protobuf:"varint,5,opt,name=status,proto3,enum=onos.config.device.rollback.Status" json:"status,omitempty"`
	// The reason the change failed
	Reason Reason `protobuf:"varint,6,opt,name=reason,proto3,enum=onos.config.device.rollback.Reason" json:"reason,omitempty"`
	// An optional status message
	Message string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	// The time at which the configuration was created
	Created time.Time `protobuf:"bytes,8,opt,name=created,proto3,stdtime" json:"created"`
	// The time at which the configuration was last updated
	Updated time.Time `protobuf:"bytes,9,opt,name=updated,proto3,stdtime" json:"updated"`
}

func (m *Rollback) Reset()         { *m = Rollback{} }
func (m *Rollback) String() string { return proto.CompactTextString(m) }
func (*Rollback) ProtoMessage()    {}
func (*Rollback) Descriptor() ([]byte, []int) {
	return fileDescriptor_444317a9fa619639, []int{0}
}
func (m *Rollback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Rollback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Rollback.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Rollback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rollback.Merge(m, src)
}
func (m *Rollback) XXX_Size() int {
	return m.Size()
}
func (m *Rollback) XXX_DiscardUnknown() {
	xxx_messageInfo_Rollback.DiscardUnknown(m)
}

var xxx_messageInfo_Rollback proto.InternalMessageInfo

func (m *Rollback) GetID() ID {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Rollback) GetRevision() Revision {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *Rollback) GetRollbackID() github_com_onosproject_onos_config_pkg_types.ID {
	if m != nil {
		return m.RollbackID
	}
	return ""
}

func (m *Rollback) GetChangeID() github_com_onosproject_onos_config_pkg_types.ID {
	if m != nil {
		return m.ChangeID
	}
	return ""
}

func (m *Rollback) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_PENDING
}

func (m *Rollback) GetReason() Reason {
	if m != nil {
		return m.Reason
	}
	return Reason_ERROR
}

func (m *Rollback) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Rollback) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *Rollback) GetUpdated() time.Time {
	if m != nil {
		return m.Updated
	}
	return time.Time{}
}

func init() {
	proto.RegisterEnum("onos.config.device.rollback.Status", Status_name, Status_value)
	proto.RegisterEnum("onos.config.device.rollback.Reason", Reason_name, Reason_value)
	proto.RegisterType((*Rollback)(nil), "onos.config.device.rollback.Rollback")
}

func init() {
	proto.RegisterFile("pkg/types/device/rollback/types.proto", fileDescriptor_444317a9fa619639)
}

var fileDescriptor_444317a9fa619639 = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xcd, 0x6a, 0xdb, 0x4e,
	0x14, 0xc5, 0x35, 0x8e, 0x23, 0xcb, 0xd7, 0xfe, 0xff, 0x6b, 0x86, 0x2e, 0x84, 0x5b, 0x24, 0xd3,
	0x0f, 0x30, 0x81, 0x8e, 0x20, 0x5d, 0x16, 0x52, 0x24, 0x4b, 0x2d, 0x02, 0xe3, 0x9a, 0x49, 0x53,
	0x28, 0x14, 0x8a, 0x3e, 0x26, 0x8a, 0x1a, 0x5b, 0x23, 0x24, 0x39, 0xd0, 0xb7, 0xc8, 0x63, 0xf4,
	0x51, 0xb2, 0xcc, 0xb2, 0x2b, 0xb5, 0xc8, 0x6f, 0x91, 0x55, 0xd1, 0x48, 0xca, 0xb2, 0xb4, 0xdd,
	0x88, 0x3b, 0x57, 0xe7, 0x77, 0xee, 0x9c, 0xb9, 0xf0, 0x3c, 0xbd, 0x8c, 0x8c, 0xe2, 0x6b, 0xca,
	0x72, 0x23, 0x64, 0x57, 0x71, 0xc0, 0x8c, 0x8c, 0x6f, 0x36, 0xbe, 0x17, 0x5c, 0x36, 0x5d, 0x92,
	0x66, 0xbc, 0xe0, 0xf8, 0x11, 0x4f, 0x78, 0x4e, 0x02, 0x9e, 0x9c, 0xc7, 0x11, 0x69, 0x84, 0xa4,
	0x13, 0x4e, 0xf5, 0x88, 0xf3, 0x68, 0xc3, 0x0c, 0x21, 0xf5, 0x77, 0xe7, 0x46, 0x11, 0x6f, 0x59,
	0x5e, 0x78, 0xdb, 0xb4, 0xa1, 0xa7, 0x0f, 0x23, 0x1e, 0x71, 0x51, 0x1a, 0x75, 0xd5, 0x74, 0x9f,
	0x7c, 0xeb, 0x83, 0x42, 0x5b, 0x0f, 0xfc, 0x18, 0x7a, 0x71, 0xa8, 0xa2, 0x19, 0x9a, 0x0f, 0xad,
	0x71, 0x55, 0xea, 0x3d, 0xd7, 0xbe, 0x13, 0x5f, 0xda, 0x8b, 0x43, 0x3c, 0x07, 0x25, 0x63, 0x57,
	0x71, 0x1e, 0xf3, 0x44, 0xed, 0xcd, 0xd0, 0xbc, 0x6f, 0x8d, 0xef, 0x4a, 0x5d, 0xa1, 0x6d, 0x8f,
	0xde, 0xff, 0xc5, 0x3e, 0x8c, 0xba, 0x7b, 0x7d, 0x8e, 0x43, 0xf5, 0x40, 0x18, 0x9a, 0x55, 0xa9,
	0x43, 0x37, 0x4a, 0x18, 0x1b, 0x51, 0x5c, 0x5c, 0xec, 0x7c, 0x12, 0xf0, 0xad, 0x51, 0x47, 0x4b,
	0x33, 0xfe, 0x85, 0x05, 0x85, 0xa8, 0x5f, 0x34, 0x31, 0x8d, 0xfb, 0x97, 0x21, 0xae, 0x4d, 0xa1,
	0x73, 0x75, 0x43, 0xfc, 0x09, 0x86, 0xc1, 0x85, 0x97, 0x44, 0xac, 0x9e, 0xd0, 0x17, 0x13, 0x5e,
	0x57, 0xa5, 0xae, 0x2c, 0x44, 0xf3, 0xdf, 0xfc, 0x95, 0xc6, 0xd1, 0x0d, 0xf1, 0x2b, 0x90, 0xf3,
	0xc2, 0x2b, 0x76, 0xb9, 0x7a, 0x38, 0x43, 0xf3, 0xff, 0x8f, 0x9f, 0x92, 0xdf, 0xbc, 0x3d, 0x39,
	0x15, 0x52, 0xda, 0x22, 0x35, 0x9c, 0x31, 0x2f, 0xe7, 0x89, 0x2a, 0xff, 0x01, 0x4c, 0x85, 0x94,
	0xb6, 0x08, 0x56, 0x61, 0xb0, 0x65, 0x79, 0xee, 0x45, 0x4c, 0x1d, 0xd4, 0xa9, 0x68, 0x77, 0xc4,
	0x27, 0x30, 0x08, 0x32, 0xe6, 0x15, 0x2c, 0x54, 0x95, 0x19, 0x9a, 0x8f, 0x8e, 0xa7, 0xa4, 0xd9,
	0x39, 0xe9, 0x76, 0x4e, 0xde, 0x77, 0x3b, 0xb7, 0x94, 0x9b, 0x52, 0x97, 0xae, 0x7f, 0xe8, 0x88,
	0x76, 0x50, 0xcd, 0xef, 0xd2, 0x50, 0xf0, 0xc3, 0xbf, 0xe1, 0x5b, 0xe8, 0xe8, 0x04, 0xe4, 0x26,
	0x28, 0x1e, 0xc1, 0x60, 0xed, 0xac, 0x6c, 0x77, 0xf5, 0x76, 0x22, 0xe1, 0x31, 0x28, 0xe6, 0x7a,
	0xbd, 0xfc, 0x58, 0x9f, 0x10, 0xfe, 0x0f, 0x86, 0xa7, 0x67, 0x8b, 0x85, 0xe3, 0xd8, 0x8e, 0x3d,
	0xe9, 0x61, 0x00, 0xf9, 0x8d, 0xe9, 0x2e, 0x1d, 0x7b, 0x72, 0x70, 0xf4, 0x0c, 0xe4, 0x26, 0x2b,
	0x1e, 0xc2, 0xa1, 0x43, 0xe9, 0x3b, 0x3a, 0x91, 0xf0, 0x03, 0x18, 0x9d, 0xad, 0xcc, 0x0f, 0xa6,
	0xbb, 0x34, 0xad, 0xa5, 0x33, 0x41, 0x96, 0x7a, 0x53, 0x69, 0xe8, 0xb6, 0xd2, 0xd0, 0xcf, 0x4a,
	0x43, 0xd7, 0x7b, 0x4d, 0xba, 0xdd, 0x6b, 0xd2, 0xf7, 0xbd, 0x26, 0xf9, 0xb2, 0xb8, 0xe6, 0xcb,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x23, 0x80, 0x6c, 0xeb, 0x2e, 0x03, 0x00, 0x00,
}

func (m *Rollback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Rollback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Rollback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Updated, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Updated):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintTypes(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x4a
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Created, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Created):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintTypes(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x42
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Reason != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Reason))
		i--
		dAtA[i] = 0x30
	}
	if m.Status != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x28
	}
	if len(m.ChangeID) > 0 {
		i -= len(m.ChangeID)
		copy(dAtA[i:], m.ChangeID)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.ChangeID)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RollbackID) > 0 {
		i -= len(m.RollbackID)
		copy(dAtA[i:], m.RollbackID)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.RollbackID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Revision != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Revision))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Rollback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Revision != 0 {
		n += 1 + sovTypes(uint64(m.Revision))
	}
	l = len(m.RollbackID)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.ChangeID)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovTypes(uint64(m.Status))
	}
	if m.Reason != 0 {
		n += 1 + sovTypes(uint64(m.Reason))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Created)
	n += 1 + l + sovTypes(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Updated)
	n += 1 + l + sovTypes(uint64(l))
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Rollback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Rollback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Rollback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = ID(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			m.Revision = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Revision |= Revision(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RollbackID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RollbackID = github_com_onosproject_onos_config_pkg_types.ID(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChangeID = github_com_onosproject_onos_config_pkg_types.ID(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= Reason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Updated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthTypes
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTypes
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTypes(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthTypes
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTypes = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes   = fmt.Errorf("proto: integer overflow")
)
