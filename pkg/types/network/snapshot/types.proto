/*
Copyright 2019-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package onos.config.network.snapshot;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

// Status is the status of a configuration object
enum Status {
    // PENDING indicates the configuration is waiting to be applied
    PENDING = 0;

    // APPLYING indicates the configuration is in the process of being applied
    APPLYING = 1;

    // SUCCEEDED indicates the configuration was applied successfully
    SUCCEEDED = 2;

    // FAILED indicates the configuration failed
    FAILED = 3;
}

// Reason is a failure reason
enum Reason {
    // ERROR indicates an error occurred
    ERROR = 0;

    // UNAVAILABLE indicates the device was unavailable
    UNAVAILABLE = 1;
}

// NetworkSnapshot is a network snapshot request
message NetworkSnapshot {
    // the request identifier
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "ID"];

    // the request index
    uint64 index = 2 [(gogoproto.casttype) = "Index"];

    // revision is the request revision number
    uint64 revision = 3 [(gogoproto.casttype) = "Revision"];

    // status is the snapshot status
    Status status = 4;

    // reason is the snapshot failure reason
    Reason reason = 5;

    // values is a list of values to set
    repeated string devices = 6 [(gogoproto.casttype) = "github.com/onosproject/onos-topo/pkg/northbound/device.ID"];

    // timestamp is the time at which to take the snapshot
    google.protobuf.Timestamp timestamp = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

    // created is the time at which the configuration was created
    google.protobuf.Timestamp created = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

    // updated is the time at which the configuration was last updated
    google.protobuf.Timestamp updated = 9 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}
